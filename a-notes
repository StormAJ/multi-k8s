Admin CMD shell:
minikube delete                    // only if minikube crashed
minikube start --vm-driver=hyperv
minikube ip                        // shows IP for browser access
minikube addons enable ingress
minikube dashboard 

CMD shell:
kubectl apply -f k8s
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/mandatory.yaml
kubectl create secret generic pgpassword --from-literal PGPASSWORD=postgresPW

Google Cloud shell:
gcloud config set project multi-k8s-236712    // google-cloud project id
gcloud config set compute/zone europe-west3-c // google-cloud project zone (Ort)
gcloud container clusters get-credentials multi-cluster
kubectl create secret generic pgpassword --from-literal PGPASSWORD=postgresPW

curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh
chmod 700 get_helm.sh
./get_helm.sh

kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
helm init --service-account tiller --upgrade
helm install stable/nginx-ingress --name my-nginx --set rbac.create=true

run travis in docker container in VM:
docker run -it -v ${pwd}:/app ruby:2.3 sh // runs docker container (volume app mapped to local directory (pwd))
#gem install travis  // installs travis in container on VM
#travis login    // travis = github entry data
   // copy service-account-json to complex-k8s folder
#travis encrypt-file service-account.json -r arwedstorm/multi-k8s  // creates secrets in travis (project multi-k8s) and generates a decryption cmd line


travis encrypt-file service-account.json -r StormAJ/multi-k8s
openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in service-account.json.enc -out service-account.json -d

